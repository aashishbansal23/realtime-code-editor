{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\new\\\\Desktop\\\\Self_Learning\\\\Real Time Code Editor\\\\realtime-editor\\\\src\\\\pages\\\\EditorPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ACTIONS from \"../Actions\";\nimport Client from \"../components/Client\";\nimport Editor from \"../components/Editor\";\nimport { initSocket } from \"../socket\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditorPage = () => {\n  _s();\n\n  const socketRef = useRef(null);\n  const location = useLocation();\n  useEffect(() => {\n    const init = async () => {\n      var _location$state;\n\n      socketRef.current = await initSocket();\n      socketRef.current.on('connect_error', err => handleErrors(err));\n      socketRef.current.on('connect_failed', err => handleErrors(err));\n\n      function handleErrors(e) {\n        console.log('socket error', e);\n        toast.error('Socket connection failed, try again later.');\n        reactNavigator('/');\n      }\n\n      socketRef.current.emit(ACTIONS.JOIN, {\n        roomId,\n        username: (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username\n      });\n    };\n\n    init();\n  }, []); // const codeRef = useRef(null);\n  // const { roomId } = useParams();\n  // const reactNavigator = useNavigate();\n\n  const [clients, setClients] = useState([{\n    socketId: 1,\n    username: \"Aashish B\"\n  }, {\n    socketId: 2,\n    username: \"Rakesh B\"\n  }, {\n    socketId: 3,\n    username: \"Kaku B\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainWrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aside\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"asideInner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"logoImage\",\n            src: \"/code-sync.png\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clientsList\",\n          children: clients.map(client => /*#__PURE__*/_jsxDEV(Client, {\n            username: client.username\n          }, client.socketId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn copyBtn\",\n        children: \"Copy ROOM ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn leaveBtn\",\n        children: \"Leave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editorWrap\",\n      children: /*#__PURE__*/_jsxDEV(Editor, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditorPage, \"lvrG9FIABCOOok6ekmdtixe1AcU=\", false, function () {\n  return [useLocation];\n});\n\n_c = EditorPage;\nexport default EditorPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ACTIONS","Client","Editor","initSocket","useLocation","EditorPage","socketRef","location","init","current","on","err","handleErrors","e","console","log","toast","error","reactNavigator","emit","JOIN","roomId","username","state","clients","setClients","socketId","map","client"],"sources":["C:/Users/new/Desktop/Self_Learning/Real Time Code Editor/realtime-editor/src/pages/EditorPage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport ACTIONS from \"../Actions\";\r\nimport Client from \"../components/Client\";\r\nimport Editor from \"../components/Editor\";\r\nimport { initSocket } from \"../socket\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst EditorPage = () => {\r\n  const socketRef = useRef(null);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      socketRef.current = await initSocket();\r\n      socketRef.current.on('connect_error', (err) => handleErrors(err));\r\n      socketRef.current.on('connect_failed', (err) => handleErrors(err));\r\n\r\n      function handleErrors(e) {\r\n        console.log('socket error', e);\r\n        toast.error('Socket connection failed, try again later.');\r\n        reactNavigator('/');\r\n    }\r\n\r\n\r\n      socketRef.current.emit(ACTIONS.JOIN, {\r\n        roomId,\r\n        username: location.state?.username,\r\n      });\r\n    };\r\n    init();\r\n  }, []);\r\n\r\n  // const codeRef = useRef(null);\r\n  // const { roomId } = useParams();\r\n  // const reactNavigator = useNavigate();\r\n  const [clients, setClients] = useState([\r\n    { socketId: 1, username: \"Aashish B\" },\r\n    { socketId: 2, username: \"Rakesh B\" },\r\n    { socketId: 3, username: \"Kaku B\" },\r\n  ]);\r\n  return (\r\n    <div className=\"mainWrap\">\r\n      <div className=\"aside\">\r\n        <div className=\"asideInner\">\r\n          <div className=\"logo\">\r\n            <img className=\"logoImage\" src=\"/code-sync.png\" alt=\"logo\" />\r\n          </div>\r\n          <h3>Connected</h3>\r\n          <div className=\"clientsList\">\r\n            {clients.map((client) => (\r\n              <Client key={client.socketId} username={client.username} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <button className=\"btn copyBtn\">Copy ROOM ID</button>\r\n        <button className=\"btn leaveBtn\">Leave</button>\r\n      </div>\r\n      <div className=\"editorWrap\">\r\n        <Editor />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditorPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}